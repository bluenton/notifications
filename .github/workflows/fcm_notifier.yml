name: Firebase FCM Notifier

on:
  workflow_dispatch: # Allows manual triggering from GitHub UI
  schedule:
    - cron: '*/5 * * * *' # Runs every 5 minutes (adjust as needed)

jobs:
  run-notifier:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x' # Use a compatible Python version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install firebase-admin # Install the Firebase Admin SDK

    - name: Run FCM Notifier Script
      env:
        # Securely pass your Firebase service account key as a JSON string.
        # You MUST add this as a secret in your GitHub repository settings.
        # Go to your repository -> Settings -> Secrets and variables -> Actions -> New repository secret.
        # Name: FIREBASE_SERVICE_ACCOUNT_KEY
        # Value: The ENTIRE JSON content of your downloaded Firebase service account key file,
        #        minified into a single line (no newlines).
        FIREBASE_SERVICE_ACCOUNT_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}
        # If your Python script needed FCM tokens as environment variables, you could add them here.
        # However, the current Python script hardcodes them or expects them to be fetched from Firestore.
        # FCM_REGISTRATION_TOKENS: "token1,token2,token3"
      run: |
        python send_fcm_notification.py

    - name: Persist processed sessions (Optional, for more robust state management)
      # This step is commented out by default as persisting state across ephemeral
      # GitHub Actions runners requires a more robust solution like a database.
      # If you uncomment this, it attempts to save a local 'processed_sessions.json'
      # file to a temporary location that *might* be available in subsequent runs
      # if the runner is reused (which is not guaranteed).
      # For production, consider saving processed session IDs directly to Firestore.
      run: |
        if [ -f processed_sessions.json ]; then
          mkdir -p ~/.processed_sessions
          mv processed_sessions.json ~/.processed_sessions/processed_sessions.json
          echo "Processed sessions file moved for potential persistence."
        else
          echo "No processed sessions file to persist."
        fi
      # IMPORTANT: If you need persistence, consider using Firebase Firestore itself
      # to store processed session IDs instead of relying on ephemeral runner storage.
